%article.video
  .container
    .row
      .video_large_cover.col-sm-7.col-sm-offset-1
        %img{src: @video.cover_large_url}
      .video_info.col-sm-3
        %header
          %h3= @video.title
          %span= "Rating: #{@video.average_rating_string}"
        %p= @video.description
        .actions
          %a.btn.btn-primary(href="") Watch Now
          - if @video_queue_entry
            = bootstrap_form_for(@video_queue_entry, url: user_video_queue_entry_index_path(@video_queue_entry.user, user_id: @video_queue_entry.user_id, format: :html)) do |f|
              = f.text_field :video_id, wrapper: { hidden: true}
              = f.text_field :position, wrapper: { hidden: true }
              = f.text_field :user_id, wrapper: { hidden: true }
              = f.submit "+ My Queue", class: "btn btn-default"
          - else
            %a.btn.btn-default(href="#{my_queue_path}") Show My Queue

%section.reviews.container
  .row
    .col-sm-10.col-sm-offset-1
      - if @review
        = bootstrap_form_for(@review, url: create_review_video_path(@video)) do |f|
          %label Rate this video
          = f.select :rating, [["Not Rated", 0]] + ((1..5).inject([]) { |memo,n| memo << ["#{n} " + "Star".pluralize(n), n ] }).reverse, {label: "Rating"}
          = f.text_field :title, label: "Review Title"
          = f.text_area :body, label: "Write Review", rows: 6
          = f.submit "Submit"

      %header
        %h3= "User Reviews (#{@video.reviews.size})"
      %ul
        - @video.reviews.each do |review|
          = render "reviews/review_entry", review: review
